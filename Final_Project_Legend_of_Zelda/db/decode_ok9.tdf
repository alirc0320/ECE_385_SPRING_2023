--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="MAX 10" LPM_DECODES=31 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_ok9
( 
	data[4..0]	:	input;
	eq[30..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[30..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1008w[3..0]	: WIRE;
	w_anode1018w[3..0]	: WIRE;
	w_anode1028w[3..0]	: WIRE;
	w_anode1038w[3..0]	: WIRE;
	w_anode1048w[3..0]	: WIRE;
	w_anode1058w[3..0]	: WIRE;
	w_anode690w[2..0]	: WIRE;
	w_anode704w[3..0]	: WIRE;
	w_anode721w[3..0]	: WIRE;
	w_anode731w[3..0]	: WIRE;
	w_anode741w[3..0]	: WIRE;
	w_anode751w[3..0]	: WIRE;
	w_anode761w[3..0]	: WIRE;
	w_anode771w[3..0]	: WIRE;
	w_anode781w[3..0]	: WIRE;
	w_anode793w[2..0]	: WIRE;
	w_anode803w[3..0]	: WIRE;
	w_anode814w[3..0]	: WIRE;
	w_anode824w[3..0]	: WIRE;
	w_anode834w[3..0]	: WIRE;
	w_anode844w[3..0]	: WIRE;
	w_anode854w[3..0]	: WIRE;
	w_anode864w[3..0]	: WIRE;
	w_anode874w[3..0]	: WIRE;
	w_anode885w[2..0]	: WIRE;
	w_anode895w[3..0]	: WIRE;
	w_anode906w[3..0]	: WIRE;
	w_anode916w[3..0]	: WIRE;
	w_anode926w[3..0]	: WIRE;
	w_anode936w[3..0]	: WIRE;
	w_anode946w[3..0]	: WIRE;
	w_anode956w[3..0]	: WIRE;
	w_anode966w[3..0]	: WIRE;
	w_anode977w[2..0]	: WIRE;
	w_anode987w[3..0]	: WIRE;
	w_anode998w[3..0]	: WIRE;
	w_data688w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[30..0] = eq_wire[30..0];
	eq_wire[] = ( ( w_anode1058w[3..3], w_anode1048w[3..3], w_anode1038w[3..3], w_anode1028w[3..3], w_anode1018w[3..3], w_anode1008w[3..3], w_anode998w[3..3], w_anode987w[3..3]), ( w_anode966w[3..3], w_anode956w[3..3], w_anode946w[3..3], w_anode936w[3..3], w_anode926w[3..3], w_anode916w[3..3], w_anode906w[3..3], w_anode895w[3..3]), ( w_anode874w[3..3], w_anode864w[3..3], w_anode854w[3..3], w_anode844w[3..3], w_anode834w[3..3], w_anode824w[3..3], w_anode814w[3..3], w_anode803w[3..3]), ( w_anode781w[3..3], w_anode771w[3..3], w_anode761w[3..3], w_anode751w[3..3], w_anode741w[3..3], w_anode731w[3..3], w_anode721w[3..3], w_anode704w[3..3]));
	w_anode1008w[] = ( (w_anode1008w[2..2] & (! w_data688w[2..2])), (w_anode1008w[1..1] & w_data688w[1..1]), (w_anode1008w[0..0] & (! w_data688w[0..0])), w_anode977w[2..2]);
	w_anode1018w[] = ( (w_anode1018w[2..2] & (! w_data688w[2..2])), (w_anode1018w[1..1] & w_data688w[1..1]), (w_anode1018w[0..0] & w_data688w[0..0]), w_anode977w[2..2]);
	w_anode1028w[] = ( (w_anode1028w[2..2] & w_data688w[2..2]), (w_anode1028w[1..1] & (! w_data688w[1..1])), (w_anode1028w[0..0] & (! w_data688w[0..0])), w_anode977w[2..2]);
	w_anode1038w[] = ( (w_anode1038w[2..2] & w_data688w[2..2]), (w_anode1038w[1..1] & (! w_data688w[1..1])), (w_anode1038w[0..0] & w_data688w[0..0]), w_anode977w[2..2]);
	w_anode1048w[] = ( (w_anode1048w[2..2] & w_data688w[2..2]), (w_anode1048w[1..1] & w_data688w[1..1]), (w_anode1048w[0..0] & (! w_data688w[0..0])), w_anode977w[2..2]);
	w_anode1058w[] = ( (w_anode1058w[2..2] & w_data688w[2..2]), (w_anode1058w[1..1] & w_data688w[1..1]), (w_anode1058w[0..0] & w_data688w[0..0]), w_anode977w[2..2]);
	w_anode690w[] = ( (w_anode690w[1..1] & (! data_wire[4..4])), (w_anode690w[0..0] & (! data_wire[3..3])), B"1");
	w_anode704w[] = ( (w_anode704w[2..2] & (! w_data688w[2..2])), (w_anode704w[1..1] & (! w_data688w[1..1])), (w_anode704w[0..0] & (! w_data688w[0..0])), w_anode690w[2..2]);
	w_anode721w[] = ( (w_anode721w[2..2] & (! w_data688w[2..2])), (w_anode721w[1..1] & (! w_data688w[1..1])), (w_anode721w[0..0] & w_data688w[0..0]), w_anode690w[2..2]);
	w_anode731w[] = ( (w_anode731w[2..2] & (! w_data688w[2..2])), (w_anode731w[1..1] & w_data688w[1..1]), (w_anode731w[0..0] & (! w_data688w[0..0])), w_anode690w[2..2]);
	w_anode741w[] = ( (w_anode741w[2..2] & (! w_data688w[2..2])), (w_anode741w[1..1] & w_data688w[1..1]), (w_anode741w[0..0] & w_data688w[0..0]), w_anode690w[2..2]);
	w_anode751w[] = ( (w_anode751w[2..2] & w_data688w[2..2]), (w_anode751w[1..1] & (! w_data688w[1..1])), (w_anode751w[0..0] & (! w_data688w[0..0])), w_anode690w[2..2]);
	w_anode761w[] = ( (w_anode761w[2..2] & w_data688w[2..2]), (w_anode761w[1..1] & (! w_data688w[1..1])), (w_anode761w[0..0] & w_data688w[0..0]), w_anode690w[2..2]);
	w_anode771w[] = ( (w_anode771w[2..2] & w_data688w[2..2]), (w_anode771w[1..1] & w_data688w[1..1]), (w_anode771w[0..0] & (! w_data688w[0..0])), w_anode690w[2..2]);
	w_anode781w[] = ( (w_anode781w[2..2] & w_data688w[2..2]), (w_anode781w[1..1] & w_data688w[1..1]), (w_anode781w[0..0] & w_data688w[0..0]), w_anode690w[2..2]);
	w_anode793w[] = ( (w_anode793w[1..1] & (! data_wire[4..4])), (w_anode793w[0..0] & data_wire[3..3]), B"1");
	w_anode803w[] = ( (w_anode803w[2..2] & (! w_data688w[2..2])), (w_anode803w[1..1] & (! w_data688w[1..1])), (w_anode803w[0..0] & (! w_data688w[0..0])), w_anode793w[2..2]);
	w_anode814w[] = ( (w_anode814w[2..2] & (! w_data688w[2..2])), (w_anode814w[1..1] & (! w_data688w[1..1])), (w_anode814w[0..0] & w_data688w[0..0]), w_anode793w[2..2]);
	w_anode824w[] = ( (w_anode824w[2..2] & (! w_data688w[2..2])), (w_anode824w[1..1] & w_data688w[1..1]), (w_anode824w[0..0] & (! w_data688w[0..0])), w_anode793w[2..2]);
	w_anode834w[] = ( (w_anode834w[2..2] & (! w_data688w[2..2])), (w_anode834w[1..1] & w_data688w[1..1]), (w_anode834w[0..0] & w_data688w[0..0]), w_anode793w[2..2]);
	w_anode844w[] = ( (w_anode844w[2..2] & w_data688w[2..2]), (w_anode844w[1..1] & (! w_data688w[1..1])), (w_anode844w[0..0] & (! w_data688w[0..0])), w_anode793w[2..2]);
	w_anode854w[] = ( (w_anode854w[2..2] & w_data688w[2..2]), (w_anode854w[1..1] & (! w_data688w[1..1])), (w_anode854w[0..0] & w_data688w[0..0]), w_anode793w[2..2]);
	w_anode864w[] = ( (w_anode864w[2..2] & w_data688w[2..2]), (w_anode864w[1..1] & w_data688w[1..1]), (w_anode864w[0..0] & (! w_data688w[0..0])), w_anode793w[2..2]);
	w_anode874w[] = ( (w_anode874w[2..2] & w_data688w[2..2]), (w_anode874w[1..1] & w_data688w[1..1]), (w_anode874w[0..0] & w_data688w[0..0]), w_anode793w[2..2]);
	w_anode885w[] = ( (w_anode885w[1..1] & data_wire[4..4]), (w_anode885w[0..0] & (! data_wire[3..3])), B"1");
	w_anode895w[] = ( (w_anode895w[2..2] & (! w_data688w[2..2])), (w_anode895w[1..1] & (! w_data688w[1..1])), (w_anode895w[0..0] & (! w_data688w[0..0])), w_anode885w[2..2]);
	w_anode906w[] = ( (w_anode906w[2..2] & (! w_data688w[2..2])), (w_anode906w[1..1] & (! w_data688w[1..1])), (w_anode906w[0..0] & w_data688w[0..0]), w_anode885w[2..2]);
	w_anode916w[] = ( (w_anode916w[2..2] & (! w_data688w[2..2])), (w_anode916w[1..1] & w_data688w[1..1]), (w_anode916w[0..0] & (! w_data688w[0..0])), w_anode885w[2..2]);
	w_anode926w[] = ( (w_anode926w[2..2] & (! w_data688w[2..2])), (w_anode926w[1..1] & w_data688w[1..1]), (w_anode926w[0..0] & w_data688w[0..0]), w_anode885w[2..2]);
	w_anode936w[] = ( (w_anode936w[2..2] & w_data688w[2..2]), (w_anode936w[1..1] & (! w_data688w[1..1])), (w_anode936w[0..0] & (! w_data688w[0..0])), w_anode885w[2..2]);
	w_anode946w[] = ( (w_anode946w[2..2] & w_data688w[2..2]), (w_anode946w[1..1] & (! w_data688w[1..1])), (w_anode946w[0..0] & w_data688w[0..0]), w_anode885w[2..2]);
	w_anode956w[] = ( (w_anode956w[2..2] & w_data688w[2..2]), (w_anode956w[1..1] & w_data688w[1..1]), (w_anode956w[0..0] & (! w_data688w[0..0])), w_anode885w[2..2]);
	w_anode966w[] = ( (w_anode966w[2..2] & w_data688w[2..2]), (w_anode966w[1..1] & w_data688w[1..1]), (w_anode966w[0..0] & w_data688w[0..0]), w_anode885w[2..2]);
	w_anode977w[] = ( (w_anode977w[1..1] & data_wire[4..4]), (w_anode977w[0..0] & data_wire[3..3]), B"1");
	w_anode987w[] = ( (w_anode987w[2..2] & (! w_data688w[2..2])), (w_anode987w[1..1] & (! w_data688w[1..1])), (w_anode987w[0..0] & (! w_data688w[0..0])), w_anode977w[2..2]);
	w_anode998w[] = ( (w_anode998w[2..2] & (! w_data688w[2..2])), (w_anode998w[1..1] & (! w_data688w[1..1])), (w_anode998w[0..0] & w_data688w[0..0]), w_anode977w[2..2]);
	w_data688w[2..0] = data_wire[2..0];
END;
--VALID FILE
